{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Your Pet",
    "description": "API for Your Pet",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:8000/api" },
    { "url": "https://your-pets-backend.onrender.com/api" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    { "name": "Friends", "description": "Get all friends" },
    { "name": "Pets", "description": "Pets endpoints" }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFullResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFullResponse"
                }
              }
            }
          },
          "400": {
            "description": "Please provide email and password",
            "content": {}
          },
          "401": {
            "description": "Wrong credentials",
            "content": {}
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current logged in user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserFullResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Get current logged in user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/auth/updateUser": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAvatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFullResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/friends": {
      "get": {
        "tags": ["Friends"],
        "summary": "Get list of friends",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FriendsResponse" }
              }
            }
          }
        }
      }
    },
    "/pets": {
      "get": {
        "tags": ["Pets"],
        "summary": "Get all pets",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PetResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Pets"],
        "summary": "Add a new pet",
        "operationId": "addPet",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PetRequest" }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "petAvatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully added a new pet",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PetResponse" }
              }
            }
          }
        }
      }
    },
    "/pets/{id}": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete a pet by ID",
        "operationId": "deletePet",
        "parameters": {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Id of the pet to delete"
        },
        "responses": {
          "200": {
            "description": "Pets was deleted successfully"
          },
          "404": {
            "description": "Pet with this ID was not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "format": "name",
            "example": "John Dow"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "format": "name",
            "example": "John Dow"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthDate": {
            "type": "string",
            "description": "User's birthday date",
            "example": "30-12-1999"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Lviv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+380501234567"
          }
        }
      },
      "UserFullResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "321zssd43232436545474"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "format": "name",
            "example": "John Dow"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthDate": {
            "type": "string",
            "description": "User's birthday date",
            "example": "30-12-1999"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Lviv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+380501234567"
          },
          "avatarURL": {
            "type": "string",
            "description": "URL to user's avatar",
            "example": "http://localhost:8000/avatars/defaultAvatar.png"
          },
          "token": {
            "type": "string",
            "description": "Access token",
            "example": "iJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjTMzNGRkNDJhMjA1YmNkOSIsImlhdCI6MTY5MDIwMjA4MCwiZXhwIjoxNjkwMjg0ODgwfQ.tMnqxlro4JMvOAMeH2xitW7KVIrz07Ej-n6ES-T5vHg"
          },
          "myPets": { "type": "array", "items": { "$ref": "#/components/schemas/PetResponse" } },
          "favoritePets": { "type": "array", "items": { "$ref": "#/components/schemas/PetResponse" } }
        }
      },
      "AuthenticationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "FriendsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "url": {
              "type": "string",
              "description": "Company's website",
              "format": "uri"
            },
            "addressUrl": {
              "type": "string",
              "description": "Company's address in Google maps",
              "format": "uri"
            },
            "imageUrl": {
              "type": "string",
              "description": "Company's logo",
              "format": "uri"
            },
            "address": {
              "type": "string"
            },
            "workDays": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "isOpen": {
                    "type": "boolean"
                  },
                  "from": {
                    "type": "string"
                  },
                  "to": {
                    "type": "string"
                  }
                }
              }
            },
            "phone": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          }
        }
      },
      "PetResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Pet's unique ID",
            "example": "64c001b21a06f4a80fc18b5"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Dogie"
          },
          "title": {
            "type": "string",
            "description": "Title of Notice",
            "example": "Nice dog, love kids"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "01.01.2001"
          },
          "type": {
            "type": "string",
            "description": "Breed",
            "example": "Corgie"
          },
          "comments": {
            "types": "string",
            "description": "User's description about the dog"
          },
          "sex": {
            "types": "string",
            "enum": ["MALE", "FEMALE"],
            "description": "Sex of the animal"
          },
          "action": {
            "types": "string",
            "enum": ["sale", "in good hands", "lost/found", "my pet"],
            "description": "Which group it belongs: sale, in good hands, my pet, lost/found"
          },
          "price": {
            "types": "string",
            "description": "Price"
          },
          "location": {
            "types": "string",
            "description": "Where pet is located"
          },
          "petAvatar": {
            "type": "string",
            "description": "Url",
            "example": "https://res.cloudinary.com/dhh42ueby/image/upload/v1690307522/petAvatar/download_aw5p0t.png"
          },
          "owner": {
            "$ref": "#/components/schemas/UserFullResponse"
          }
        }
      },
      "PetRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Dogie"
          },
          "title": {
            "type": "string",
            "description": "Title of Notice",
            "example": "Nice dog, love kids"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "01.01.2001"
          },
          "type": {
            "type": "string",
            "description": "Breed",
            "example": "Corgie"
          },
          "comments": {
            "types": "string",
            "description": "User's description about the dog"
          },
          "sex": {
            "types": "string",
            "enum": ["MALE", "FEMALE"],
            "description": "Sex of the animal"
          },
          "price": {
            "types": "string",
            "description": "Price for the animal"
          },
          "location": {
            "types": "string",
            "description": "Price for the animal"
          },
          "action": {
            "types": "string",
            "enum": ["sale", "in good hands", "lost/found", "my pet"],
            "description": "Which group it belongs: sale, in good hands, my pet, lost/found"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
